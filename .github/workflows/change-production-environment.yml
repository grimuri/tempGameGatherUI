name: Change Production Environment

on:
  pull_request:
    branches:
      - main
    paths:
      - "terraform/prod_infrastructure/**"
  workflow_dispatch:

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment:
      name: "Production"
    defaults:
      run:
        working-directory: ./terraform/prod_infrastructure

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        
      - name: Terraform Init
        id: init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          echo "##[group]Terraform Init"
          echo "Initializing Terraform..."
          
          terraform init -input=false \
            -backend-config="resource_group_name=${{ secrets.AZURE_STORAGE_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.AZURE_CONTAINER_NAME }}" \
            -backend-config="key=${{ secrets.AZURE_KEY }}"

      - name: Terraform Plan
        id: plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          terraform plan -no-color -input=false -out=tfplan
          echo "tfplan-path=tfplan" >> $GITHUB_OUTPUT


      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: .

  terraform-aply:
    needs: terraform-plan
    defaults:
      run:
        working-directory: ./terraform/prod_infrastructure
    runs-on: ubuntu-latest
    environment: 
      name: "Infrastructure_production"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        
      - name: Terraform Init
        id: init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          echo "##[group]Terraform Init"
          echo "Initializing Terraform..."
          
          terraform init -input=false \
            -backend-config="resource_group_name=${{ secrets.AZURE_STORAGE_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.AZURE_CONTAINER_NAME }}" \
            -backend-config="key=${{ secrets.AZURE_KEY }}"
          
      - name: Download tfplan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Aply
        id: aply
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform apply -auto-approve "${{ needs.terraform-plan.outputs.tfplan-path }}"